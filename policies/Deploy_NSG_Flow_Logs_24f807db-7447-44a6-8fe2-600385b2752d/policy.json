{
 "properties": {
  "displayName": "Deploy NSG Flow Logs",
  "policyType": "Custom",
  "mode": "Indexed",
  "description": "Configures flow log for network security groups. It will allow to log information about IP traffic flowing through a network security group. Flow log helps to identify unknown or undesired traffic, verify network isolation and compliance with enterprise access rules, analyze network flows from compromised IPs and network interfaces.",
  "metadata": {
   "category": "Monitoring",
   "createdBy": "07f52fe5-f266-4552-9dcb-af47995355f0",
   "createdOn": "2022-10-21T13:15:01.9885592Z",
   "updatedBy": null,
   "updatedOn": null
  },
  "parameters": {
   "nsgRegion": {
    "type": "String",
    "metadata": {
     "displayName": "NSG Region",
     "description": "This Policy will review NSGs only in the selected region. You can create other assignments to include other regions.",
     "strongType": "location"
    }
   },
   "storageId": {
    "type": "String",
    "metadata": {
     "displayName": "Storage id",
     "description": "A string with the storage id for the flowlogs to be sent to. It will be used for deployment purposes only. Make sure this storage account is located in the same region as the NSG. The format must be: '/subscriptions/{subscription id}/resourceGroups/{resourceGroup name}/providers/Microsoft.Storage/storageAccounts/{storage account name}",
     "assignPermissions": "true"
    }
   },
   "networkWatcherRG": {
    "type": "String",
    "metadata": {
     "displayName": "Network Watchers RG",
     "description": "The name of the resource group where the flowLog resources will be created. This will be used only if a deployment is required. This is the resource group where the Network Watchers are located.",
     "strongType": "existingResourceGroups"
    },
    "defaultValue": "NetworkWatcherRG"
   },
   "networkWatcherName": {
    "type": "String",
    "metadata": {
     "displayName": "Network Watcher name",
     "description": "The name of the network watcher under which the flowLog resources will be created. Make sure it belongs to the same region as the NSG."
    }
   },
   "retention": {
    "type": "Integer",
    "metadata": {
     "displayName": "Retention",
     "description": null
    },
    "defaultValue": 30
   },
   "trafficAnalyticsInterval": {
    "type": "Integer",
    "metadata": {
     "displayName": "Traffic Analytics processing interval mins (10/60)",
     "description": null
    },
    "defaultValue": 10
   },
   "flowAnalyticsEnabled": {
    "type": "Boolean",
    "metadata": {
     "displayName": "Enable Traffic Analytics",
     "description": null
    },
    "defaultValue": true
   },
   "workspaceResourceId": {
    "type": "String",
    "metadata": {
     "displayName": "Resource ID of Log Analytics workspace",
     "description": "Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant 'Log Analytics Contributor' permissions (or similar) to the policy assignment's principal ID.",
     "strongType": "omsWorkspace"
    },
    "defaultValue": ""
   }
  },
  "policyRule": {
   "if": {
    "allOf": [
     {
      "field": "type",
      "equals": "Microsoft.Network/networkSecurityGroups"
     },
     {
      "field": "location",
      "equals": "[parameters('nsgRegion')]"
     }
    ]
   },
   "then": {
    "effect": "deployIfNotExists",
    "details": {
     "type": "Microsoft.Network/networkWatchers/flowlogs",
     "resourceGroupName": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), parameters('networkWatcherRG'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]",
     "name": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id'))), 'null/null', concat(split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8], '/', split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10]))]",
     "existenceCondition": {
      "allOf": [
       {
        "field": "Microsoft.Network/networkWatchers/flowLogs/enabled",
        "equals": "true"
       },
       {
        "field": "Microsoft.Network/networkWatchers/flowLogs/storageId",
        "equals": "[parameters('storageId')]"
       },
       {
        "field": "Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled",
        "equals": "[parameters('flowAnalyticsEnabled')]"
       }
      ]
     },
     "roleDefinitionIds": [
      "/providers/microsoft.authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
     ],
     "deployment": {
      "properties": {
       "mode": "incremental",
       "template": {
        "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
         "storageId": {
          "type": "string"
         },
         "networkWatcherRG": {
          "type": "string"
         },
         "networkWatcherName": {
          "type": "string"
         },
         "flowlogName": {
          "type": "string"
         },
         "location": {
          "type": "string"
         },
         "targetResource": {
          "type": "string"
         },
         "retention": {
          "type": "int"
         },
         "flowAnalyticsEnabled": {
          "type": "bool"
         },
         "trafficAnalyticsInterval": {
          "type": "int"
         },
         "workspaceResourceId": {
          "type": "string"
         }
        },
        "resources": [
         {
          "type": "Microsoft.Resources/deployments",
          "name": "[concat('flowlogDeployment-', uniqueString(parameters('flowlogName')))]",
          "apiVersion": "2019-10-01",
          "resourceGroup": "[parameters('networkWatcherRG')]",
          "properties": {
           "mode": "incremental",
           "parameters": {},
           "template": {
            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {},
            "resources": [
             {
              "type": "Microsoft.Network/networkWatchers/flowLogs",
              "name": "[concat(parameters('networkWatcherName'), '/', parameters('flowlogName'))]",
              "apiVersion": "2020-07-01",
              "location": "[parameters('location')]",
              "properties": {
               "targetResourceId": "[parameters('targetResource')]",
               "storageId": "[parameters('storageId')]",
               "enabled": "true",
               "retentionPolicy": {
                "days": "[parameters('retention')]",
                "enabled": "true"
               },
               "format": {
                "type": "JSON",
                "version": 2
               },
               "flowAnalyticsConfiguration": {
                "networkWatcherFlowAnalyticsConfiguration": {
                 "enabled": "true",
                 "workspaceResourceId": "[parameters('workspaceResourceId')]",
                 "trafficAnalyticsInterval": "[parameters('trafficAnalyticsInterval')]"
                }
               }
              }
             }
            ]
           }
          }
         }
        ]
       },
       "parameters": {
        "storageId": {
         "value": "[parameters('storageId')]"
        },
        "networkWatcherRG": {
         "value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), parameters('networkWatcherRG'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[4])]"
        },
        "networkWatcherName": {
         "value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), parameters('networkWatcherName'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[8])]"
        },
        "flowlogName": {
         "value": "[if(empty(coalesce(field('Microsoft.Network/networkSecurityGroups/flowLogs'))), concat(field('name'), '-', resourceGroup().name, '-', 'flowlog'), split(first(field('Microsoft.Network/networkSecurityGroups/flowLogs[*].id')), '/')[10])]"
        },
        "location": {
         "value": "[field('location')]"
        },
        "targetResource": {
         "value": "[concat(resourceGroup().id, '/providers/Microsoft.Network/networkSecurityGroups/', field('name'))]"
        },
        "retention": {
         "value": "[parameters('retention')]"
        },
        "flowAnalyticsEnabled": {
         "value": "[parameters('flowAnalyticsEnabled')]"
        },
        "trafficAnalyticsInterval": {
         "value": "[parameters('trafficAnalyticsInterval')]"
        },
        "workspaceResourceId": {
         "value": "[parameters('workspaceResourceId')]"
        }
       }
      }
     }
    }
   }
  }
 },
 "id": "/providers/Microsoft.Management/managementGroups/a6e09f1d-1f05-497b-b499-da099ced752f/providers/Microsoft.Authorization/policyDefinitions/24f807db-7447-44a6-8fe2-600385b2752d",
 "type": "Microsoft.Authorization/policyDefinitions",
 "name": "24f807db-7447-44a6-8fe2-600385b2752d"
}